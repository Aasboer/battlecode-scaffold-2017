apply plugin: 'java'
//apply plugin: 'scala'
//apply plugin: 'kotlin'

apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.8

sourceSets {
    main {
        java.srcDirs = ["src"]

        output.classesDir = "$buildDir/src"
    }
    test {
        java.srcDirs = ["test"]

        output.classesDir = "$buildDir/tests"
    }
}

repositories {
    maven {
        url "http://battlecode-maven-test-aaarblgarbl.s3-website-us-east-1.amazonaws.com/"
    }

    jcenter()
}

dependencies {
    compile group: 'org.battlecode', name: 'battlecode', version: '2017.+'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

eclipse {
    classpath {
        downloadJavadoc = true
    }
}

// setup default config
if (!project.hasProperty("teamA")) {
    ext.teamA = "examplefuncsplayer"
}
if (!project.hasProperty("teamB")) {
    ext.teamB = "examplefuncsplayer"
}
if (!project.hasProperty("maps")) {
    ext.maps = "shrine"
}

task headless(type: JavaExec, dependsOn: ['build']) {
    description 'Runs a match without starting the client.'

    main = 'battlecode.server.Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-c=-']
    jvmArgs = [
        '-Dbc.server.mode=headless',
        '-Dbc.server.map-path=maps',
        '-Dbc.server.debug=true',
        '-Dbc.engine.debug-methods=true',
        '-Dbc.game.team-a='+project.property('teamA'),
        '-Dbc.game.team-b='+project.property('teamB'),
        '-Dbc.game.team-a.url='+sourceSets.main.output.classesDir,
        '-Dbc.game.team-b.url='+sourceSets.main.output.classesDir,
        '-Dbc.game.maps='+project.property('maps'),
        '-Dbc.server.save-file=' + 'matches/' + project.property('teamA') + '-vs-' + project.property('teamB') + '-on-' + project.property('maps') + '.bc17'
    ]
}

// Handle downloading the client


def os = System.getProperty("os.name").toLowerCase()
def clientName = os.startsWith('windows') ? 'battlecode-client-win' :
                 os.startsWith('mac') ? 'battlecode-client-mac' :
                 'battlecode-client-linux'

configurations {
    client
}

dependencies {
    client group: 'org.battlecode', name: clientName, version: '2017.+'
}

// TODO test on windows while client is running
task unpackClient(type: Copy, dependsOn: configurations.client) {
    description 'Downloads the client.'

    dependsOn configurations.client

    from {
        configurations.client.collect {
            zipTree(it)
        }
    }
    into 'client/'
}